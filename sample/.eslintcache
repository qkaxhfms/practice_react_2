[{"D:\\practice_react_2\\sample\\src\\index.js":"1","D:\\practice_react_2\\sample\\src\\Components\\App.js":"2","D:\\practice_react_2\\sample\\src\\Components\\Item.js":"3","D:\\practice_react_2\\sample\\src\\Components\\Item2.js":"4","D:\\practice_react_2\\sample\\src\\Components\\Scroll.js":"5"},{"size":207,"mtime":1609517782055,"results":"6","hashOfConfig":"7"},{"size":267,"mtime":1609672596485,"results":"8","hashOfConfig":"7"},{"size":1505,"mtime":1609568517219,"results":"9","hashOfConfig":"7"},{"size":839,"mtime":1609569807031,"results":"10","hashOfConfig":"7"},{"size":844,"mtime":1609944639126,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1wxumty",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\practice_react_2\\sample\\src\\index.js",[],["24","25"],"D:\\practice_react_2\\sample\\src\\Components\\App.js",[],"D:\\practice_react_2\\sample\\src\\Components\\Item.js",[],"D:\\practice_react_2\\sample\\src\\Components\\Item2.js",["26"],"import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\nconst Item2 = () => {\r\n    \r\n    const [input, setInput] = useState(\"\");\r\n    // const [inputLength, setInputLength] = useState(0);\r\n    // const updateLength = () => setInputLength(input.length);\r\n    // useEffect(updateLength, [input]);\r\n    const inputLength = useMemo(() => input.length, [input]);\r\n    // 기존에 수행한 연산의 결과값을 메모리에 저장함으로써 동일한 계산 반복 수행을 줄임\r\n\r\n    const onChangeLength = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setInput(value);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div>\r\n                <input onChange={onChangeLength}/>\r\n                <label>{inputLength}</label>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Item2;","D:\\practice_react_2\\sample\\src\\Components\\Scroll.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":27,"nodeType":"33","messageId":"34","endLine":1,"endColumn":36},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]